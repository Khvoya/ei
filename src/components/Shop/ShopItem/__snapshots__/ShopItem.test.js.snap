// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ShopItem should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ShopItem
    description="test description"
    id="23"
    imageUrl={
      Array [
        "https://test-image1.url",
        "https://test-image2.url",
      ]
    }
    material="material"
    name="test name"
    price="99"
    size="xl"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          active={false}
          className="ShopItem__wrap"
          disabled={false}
          onClick={[Function]}
          type="button"
          variant="primary"
        >
          <div
            className="ShopItem"
          >
            <ForwardRef(render)
              controls={false}
              fade={true}
              indicators={false}
              interval={2000}
              pauseOnHover={false}
            >
              <div
                className="ShopItem__images"
              >
                <img
                  alt="test name"
                  className="ShopItem__image"
                  src="https://test-image1.url"
                />
              </div>
              <div
                className="ShopItem__images"
              >
                <img
                  alt="test name"
                  className="ShopItem__image"
                  src="https://test-image2.url"
                />
              </div>
            </ForwardRef(render)>
            <div
              className="ShopItem__text-wrap"
            >
              <h2
                className="ShopItem__name"
              >
                test name
              </h2>
              <div
                className="ShopItem__price"
              >
                99
              </div>
              <div
                className="ShopItem__price"
              >
                material
              </div>
            </div>
          </div>
        </ForwardRef>,
        <ShopModal
          description="test description"
          image={
            Array [
              "https://test-image1.url",
              "https://test-image2.url",
            ]
          }
          material="material"
          name="test name"
          onHide={[Function]}
          price="99"
          show={false}
          size="xl"
        />,
      ],
      "role": "toolbar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "active": false,
          "children": <div
            className="ShopItem"
          >
            <ForwardRef(render)
              controls={false}
              fade={true}
              indicators={false}
              interval={2000}
              pauseOnHover={false}
            >
              <div
                className="ShopItem__images"
              >
                <img
                  alt="test name"
                  className="ShopItem__image"
                  src="https://test-image1.url"
                />
              </div>
              <div
                className="ShopItem__images"
              >
                <img
                  alt="test name"
                  className="ShopItem__image"
                  src="https://test-image2.url"
                />
              </div>
            </ForwardRef(render)>
            <div
              className="ShopItem__text-wrap"
            >
              <h2
                className="ShopItem__name"
              >
                test name
              </h2>
              <div
                className="ShopItem__price"
              >
                99
              </div>
              <div
                className="ShopItem__price"
              >
                material
              </div>
            </div>
          </div>,
          "className": "ShopItem__wrap",
          "disabled": false,
          "onClick": [Function],
          "type": "button",
          "variant": "primary",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ForwardRef(render)
                controls={false}
                fade={true}
                indicators={false}
                interval={2000}
                pauseOnHover={false}
              >
                <div
                  className="ShopItem__images"
                >
                  <img
                    alt="test name"
                    className="ShopItem__image"
                    src="https://test-image1.url"
                  />
                </div>
                <div
                  className="ShopItem__images"
                >
                  <img
                    alt="test name"
                    className="ShopItem__image"
                    src="https://test-image2.url"
                  />
                </div>
              </ForwardRef(render)>,
              <div
                className="ShopItem__text-wrap"
              >
                <h2
                  className="ShopItem__name"
                >
                  test name
                </h2>
                <div
                  className="ShopItem__price"
                >
                  99
                </div>
                <div
                  className="ShopItem__price"
                >
                  material
                </div>
              </div>,
            ],
            "className": "ShopItem",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <div
                    className="ShopItem__images"
                  >
                    <img
                      alt="test name"
                      className="ShopItem__image"
                      src="https://test-image1.url"
                    />
                  </div>,
                  <div
                    className="ShopItem__images"
                  >
                    <img
                      alt="test name"
                      className="ShopItem__image"
                      src="https://test-image2.url"
                    />
                  </div>,
                ],
                "controls": false,
                "fade": true,
                "indicators": false,
                "interval": 2000,
                "pauseOnHover": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "https://test-image1.url",
                  "nodeType": "host",
                  "props": Object {
                    "children": <img
                      alt="test name"
                      className="ShopItem__image"
                      src="https://test-image1.url"
                    />,
                    "className": "ShopItem__images",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "alt": "test name",
                      "className": "ShopItem__image",
                      "src": "https://test-image1.url",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "https://test-image2.url",
                  "nodeType": "host",
                  "props": Object {
                    "children": <img
                      alt="test name"
                      className="ShopItem__image"
                      src="https://test-image2.url"
                    />,
                    "className": "ShopItem__images",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "alt": "test name",
                      "className": "ShopItem__image",
                      "src": "https://test-image2.url",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  "type": "div",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "Caption": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "displayName": "CarouselCaption",
                  "render": [Function],
                },
                "Item": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "displayName": "CarouselItem",
                  "render": [Function],
                },
                "defaultProps": undefined,
                "displayName": "Bootstrap(undefined)",
                "propTypes": undefined,
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2
                    className="ShopItem__name"
                  >
                    test name
                  </h2>,
                  <div
                    className="ShopItem__price"
                  >
                    99
                  </div>,
                  <div
                    className="ShopItem__price"
                  >
                    material
                  </div>,
                ],
                "className": "ShopItem__text-wrap",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "test name",
                    "className": "ShopItem__name",
                  },
                  "ref": null,
                  "rendered": "test name",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "99",
                    "className": "ShopItem__price",
                  },
                  "ref": null,
                  "rendered": "99",
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "material",
                    "className": "ShopItem__price",
                  },
                  "ref": null,
                  "rendered": "material",
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "active": false,
            "disabled": false,
            "type": "button",
            "variant": "primary",
          },
          "displayName": "Button",
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "description": "test description",
          "image": Array [
            "https://test-image1.url",
            "https://test-image2.url",
          ],
          "material": "material",
          "name": "test name",
          "onHide": [Function],
          "price": "99",
          "show": false,
          "size": "xl",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "defaultProps": Object {
        "role": "toolbar",
      },
      "displayName": "ButtonToolbar",
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            active={false}
            className="ShopItem__wrap"
            disabled={false}
            onClick={[Function]}
            type="button"
            variant="primary"
          >
            <div
              className="ShopItem"
            >
              <ForwardRef(render)
                controls={false}
                fade={true}
                indicators={false}
                interval={2000}
                pauseOnHover={false}
              >
                <div
                  className="ShopItem__images"
                >
                  <img
                    alt="test name"
                    className="ShopItem__image"
                    src="https://test-image1.url"
                  />
                </div>
                <div
                  className="ShopItem__images"
                >
                  <img
                    alt="test name"
                    className="ShopItem__image"
                    src="https://test-image2.url"
                  />
                </div>
              </ForwardRef(render)>
              <div
                className="ShopItem__text-wrap"
              >
                <h2
                  className="ShopItem__name"
                >
                  test name
                </h2>
                <div
                  className="ShopItem__price"
                >
                  99
                </div>
                <div
                  className="ShopItem__price"
                >
                  material
                </div>
              </div>
            </div>
          </ForwardRef>,
          <ShopModal
            description="test description"
            image={
              Array [
                "https://test-image1.url",
                "https://test-image2.url",
              ]
            }
            material="material"
            name="test name"
            onHide={[Function]}
            price="99"
            show={false}
            size="xl"
          />,
        ],
        "role": "toolbar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "active": false,
            "children": <div
              className="ShopItem"
            >
              <ForwardRef(render)
                controls={false}
                fade={true}
                indicators={false}
                interval={2000}
                pauseOnHover={false}
              >
                <div
                  className="ShopItem__images"
                >
                  <img
                    alt="test name"
                    className="ShopItem__image"
                    src="https://test-image1.url"
                  />
                </div>
                <div
                  className="ShopItem__images"
                >
                  <img
                    alt="test name"
                    className="ShopItem__image"
                    src="https://test-image2.url"
                  />
                </div>
              </ForwardRef(render)>
              <div
                className="ShopItem__text-wrap"
              >
                <h2
                  className="ShopItem__name"
                >
                  test name
                </h2>
                <div
                  className="ShopItem__price"
                >
                  99
                </div>
                <div
                  className="ShopItem__price"
                >
                  material
                </div>
              </div>
            </div>,
            "className": "ShopItem__wrap",
            "disabled": false,
            "onClick": [Function],
            "type": "button",
            "variant": "primary",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <ForwardRef(render)
                  controls={false}
                  fade={true}
                  indicators={false}
                  interval={2000}
                  pauseOnHover={false}
                >
                  <div
                    className="ShopItem__images"
                  >
                    <img
                      alt="test name"
                      className="ShopItem__image"
                      src="https://test-image1.url"
                    />
                  </div>
                  <div
                    className="ShopItem__images"
                  >
                    <img
                      alt="test name"
                      className="ShopItem__image"
                      src="https://test-image2.url"
                    />
                  </div>
                </ForwardRef(render)>,
                <div
                  className="ShopItem__text-wrap"
                >
                  <h2
                    className="ShopItem__name"
                  >
                    test name
                  </h2>
                  <div
                    className="ShopItem__price"
                  >
                    99
                  </div>
                  <div
                    className="ShopItem__price"
                  >
                    material
                  </div>
                </div>,
              ],
              "className": "ShopItem",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <div
                      className="ShopItem__images"
                    >
                      <img
                        alt="test name"
                        className="ShopItem__image"
                        src="https://test-image1.url"
                      />
                    </div>,
                    <div
                      className="ShopItem__images"
                    >
                      <img
                        alt="test name"
                        className="ShopItem__image"
                        src="https://test-image2.url"
                      />
                    </div>,
                  ],
                  "controls": false,
                  "fade": true,
                  "indicators": false,
                  "interval": 2000,
                  "pauseOnHover": false,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "https://test-image1.url",
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt="test name"
                        className="ShopItem__image"
                        src="https://test-image1.url"
                      />,
                      "className": "ShopItem__images",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "test name",
                        "className": "ShopItem__image",
                        "src": "https://test-image1.url",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "https://test-image2.url",
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt="test name"
                        className="ShopItem__image"
                        src="https://test-image2.url"
                      />,
                      "className": "ShopItem__images",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "test name",
                        "className": "ShopItem__image",
                        "src": "https://test-image2.url",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "div",
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Caption": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "displayName": "CarouselCaption",
                    "render": [Function],
                  },
                  "Item": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "displayName": "CarouselItem",
                    "render": [Function],
                  },
                  "defaultProps": undefined,
                  "displayName": "Bootstrap(undefined)",
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2
                      className="ShopItem__name"
                    >
                      test name
                    </h2>,
                    <div
                      className="ShopItem__price"
                    >
                      99
                    </div>,
                    <div
                      className="ShopItem__price"
                    >
                      material
                    </div>,
                  ],
                  "className": "ShopItem__text-wrap",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "test name",
                      "className": "ShopItem__name",
                    },
                    "ref": null,
                    "rendered": "test name",
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "99",
                      "className": "ShopItem__price",
                    },
                    "ref": null,
                    "rendered": "99",
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "material",
                      "className": "ShopItem__price",
                    },
                    "ref": null,
                    "rendered": "material",
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "active": false,
              "disabled": false,
              "type": "button",
              "variant": "primary",
            },
            "displayName": "Button",
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "description": "test description",
            "image": Array [
              "https://test-image1.url",
              "https://test-image2.url",
            ],
            "material": "material",
            "name": "test name",
            "onHide": [Function],
            "price": "99",
            "show": false,
            "size": "xl",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "role": "toolbar",
        },
        "displayName": "ButtonToolbar",
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
